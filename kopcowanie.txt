{$APPTYPE CONSOLE}
type
  TElem = integer;
const
  Size = 13;
var
  T:array[1..Size] of TElem = (4,1,3,2,16,9,10,14,8,7,99,78,55);

//procedura testowa sprawdzaj¹ca czy dane maj¹ postaæ kopca
function check_heap(n: integer): boolean;
var
  i: integer;
begin
  result:=false;
  for i:=2 to n do
  if T[i]>T[i div 2] then exit;
  result:=true;
end;

procedure shift_down(n,i: integer);
var
  j,k: integer;
  aux: TElem;
begin
  k := i;
  repeat
    j := k;
    if (2*j <= n) and (T[2*j] > T[k]) then
       k := 2*j;
    if (2*j+1 <= n) and (T[2*j+1] > T[k]) then
       k := 2*j+1;
    aux:=T[j];
    T[j]:=T[k];
    T[k]:=aux;
  until j = k;
end;

procedure build_heap;
var
  i: integer;
begin
  for i := Size div 2 downto 1 do
    shift_down (Size,i);
end;

procedure sort;
var
  i: integer;
  aux: TElem;
begin
  for i:=Size downto 2 do
  begin
    aux:=T[1];
    T[1]:=T[i];
    T[i]:=aux;
    shift_down(i-1,1);
    Assert(check_heap(i-1));//to mo¿e spowalniaæ
  end;
end;

//mo¿liwoœæ wype³nienia innymi danymi np. po powiêkszeniu rozmiaru tablicy
procedure random_init;
var
  i: integer;
begin
  for i:=1 to Size do T[i]:=random(Size);
end;

begin
  //random_init;
  build_heap;
  Assert(check_heap(Size));
  sort;
end.